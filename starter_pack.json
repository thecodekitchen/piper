{
    "connections": [
        {
            "from_node": "Route",
            "from_port": 0,
            "to_node": "APIParam",
            "to_port": 0
        },
        {
            "from_node": "Route",
            "from_port": 0,
            "to_node": "APIParam1",
            "to_port": 0
        },
        {
            "from_node": "Route",
            "from_port": 0,
            "to_node": "APIParam2",
            "to_port": 0
        },
        {
            "from_node": "Model",
            "from_port": 0,
            "to_node": "OllamaTextEmbedderInit",
            "to_port": 0
        },
        {
            "from_node": "Url",
            "from_port": 0,
            "to_node": "OllamaTextEmbedderInit",
            "to_port": 1
        },
        {
            "from_node": "APIParam1",
            "from_port": 0,
            "to_node": "OllamaTextEmbedderRun",
            "to_port": 0
        },
        {
            "from_node": "OllamaTextEmbedderRun",
            "from_port": 0,
            "to_node": "QdrantEmbeddingRetrieverRun",
            "to_port": 0
        },
        {
            "from_node": "APIParam",
            "from_port": 0,
            "to_node": "QdrantDocumentStore",
            "to_port": 1
        },
        {
            "from_node": "Url1",
            "from_port": 0,
            "to_node": "QdrantDocumentStore",
            "to_port": 0
        },
        {
            "from_node": "Integer",
            "from_port": 0,
            "to_node": "QdrantDocumentStore",
            "to_port": 2
        },
        {
            "from_node": "QdrantDocumentStore",
            "from_port": 0,
            "to_node": "QdrantEmbeddingRetrieverInit",
            "to_port": 0
        },
        {
            "from_node": "StringList",
            "from_port": 0,
            "to_node": "ChatPromptBuilderInit",
            "to_port": 1
        },
        {
            "from_node": "StringList1",
            "from_port": 0,
            "to_node": "ChatPromptBuilderInit",
            "to_port": 2
        },
        {
            "from_node": "PromptTemplate",
            "from_port": 0,
            "to_node": "ChatPromptBuilderInit",
            "to_port": 0
        },
        {
            "from_node": "ChatPromptBuilderInit",
            "from_port": 0,
            "to_node": "Args",
            "to_port": 0
        },
        {
            "from_node": "Args",
            "from_port": 0,
            "to_node": "ChatPromptBuilderRun",
            "to_port": 1
        },
        {
            "from_node": "QdrantEmbeddingRetrieverRun",
            "from_port": 0,
            "to_node": "Args",
            "to_port": 2
        },
        {
            "from_node": "APIParam1",
            "from_port": 0,
            "to_node": "Args",
            "to_port": 1
        },
        {
            "from_node": "APIParam2",
            "from_port": 0,
            "to_node": "Args",
            "to_port": 3
        },
        {
            "from_node": "ChatPromptBuilderRun",
            "from_port": 0,
            "to_node": "OllamaChatGeneratorRun",
            "to_port": 0
        },
        {
            "from_node": "Model1",
            "from_port": 0,
            "to_node": "OllamaChatGeneratorInit",
            "to_port": 0
        },
        {
            "from_node": "Url2",
            "from_port": 0,
            "to_node": "OllamaChatGeneratorInit",
            "to_port": 1
        },
        {
            "from_node": "OllamaChatGeneratorRun",
            "from_port": 0,
            "to_node": "AnswerBuilder",
            "to_port": 1
        },
        {
            "from_node": "APIParam1",
            "from_port": 0,
            "to_node": "AnswerBuilder",
            "to_port": 0
        },
        {
            "from_node": "QdrantEmbeddingRetrieverRun",
            "from_port": 0,
            "to_node": "AnswerBuilder",
            "to_port": 2
        },
        {
            "from_node": "AnswerBuilder",
            "from_port": 0,
            "to_node": "Response",
            "to_port": 0
        },
        {
            "from_node": "Response",
            "from_port": 0,
            "to_node": "Route",
            "to_port": 0
        },
        {
            "from_node": "Route1",
            "from_port": 0,
            "to_node": "APIParam3",
            "to_port": 0
        },
        {
            "from_node": "Route1",
            "from_port": 0,
            "to_node": "APIParam4",
            "to_port": 0
        },
        {
            "from_node": "Route1",
            "from_port": 0,
            "to_node": "APIParam5",
            "to_port": 0
        },
        {
            "from_node": "APIParam4",
            "from_port": 0,
            "to_node": "FileTypeRouter",
            "to_port": 0
        },
        {
            "from_node": "FileTypeRouter",
            "from_port": 0,
            "to_node": "TextFileToDocument",
            "to_port": 0
        },
        {
            "from_node": "FileTypeRouter",
            "from_port": 1,
            "to_node": "CsvToDocument",
            "to_port": 0
        },
        {
            "from_node": "FileTypeRouter",
            "from_port": 2,
            "to_node": "MarkdownToDocument",
            "to_port": 0
        },
        {
            "from_node": "FileTypeRouter",
            "from_port": 3,
            "to_node": "HtmlToDocument",
            "to_port": 0
        },
        {
            "from_node": "FileTypeRouter",
            "from_port": 4,
            "to_node": "DocxToDocument",
            "to_port": 0
        },
        {
            "from_node": "FileTypeRouter",
            "from_port": 5,
            "to_node": "PyPdfToDocument",
            "to_port": 0
        },
        {
            "from_node": "FileTypeRouter",
            "from_port": 6,
            "to_node": "XlsxToDocument",
            "to_port": 0
        },
        {
            "from_node": "TextFileToDocument",
            "from_port": 0,
            "to_node": "DocumentJoiner",
            "to_port": 0
        },
        {
            "from_node": "CsvToDocument",
            "from_port": 0,
            "to_node": "DocumentJoiner",
            "to_port": 0
        },
        {
            "from_node": "MarkdownToDocument",
            "from_port": 0,
            "to_node": "DocumentJoiner",
            "to_port": 0
        },
        {
            "from_node": "HtmlToDocument",
            "from_port": 0,
            "to_node": "DocumentJoiner",
            "to_port": 0
        },
        {
            "from_node": "DocxToDocument",
            "from_port": 0,
            "to_node": "DocumentJoiner",
            "to_port": 0
        },
        {
            "from_node": "PyPdfToDocument",
            "from_port": 0,
            "to_node": "DocumentJoiner",
            "to_port": 0
        },
        {
            "from_node": "XlsxToDocument",
            "from_port": 0,
            "to_node": "DocumentJoiner",
            "to_port": 0
        },
        {
            "from_node": "DocumentJoiner",
            "from_port": 0,
            "to_node": "DocumentCleaner",
            "to_port": 0
        },
        {
            "from_node": "DocumentCleaner",
            "from_port": 0,
            "to_node": "DocumentSplitter",
            "to_port": 0
        },
        {
            "from_node": "DocumentSplitter",
            "from_port": 0,
            "to_node": "OllamaDocumentEmbedderRun",
            "to_port": 0
        },
        {
            "from_node": "Model2",
            "from_port": 0,
            "to_node": "OllamaDocumentEmbedderInit",
            "to_port": 0
        },
        {
            "from_node": "Url3",
            "from_port": 0,
            "to_node": "OllamaDocumentEmbedderInit",
            "to_port": 1
        },
        {
            "from_node": "OllamaDocumentEmbedderRun",
            "from_port": 0,
            "to_node": "DocumentWriterRun",
            "to_port": 0
        },
        {
            "from_node": "APIParam5",
            "from_port": 0,
            "to_node": "QdrantDocumentStore1",
            "to_port": 3
        },
        {
            "from_node": "APIParam3",
            "from_port": 0,
            "to_node": "QdrantDocumentStore1",
            "to_port": 1
        },
        {
            "from_node": "Url4",
            "from_port": 0,
            "to_node": "QdrantDocumentStore1",
            "to_port": 0
        },
        {
            "from_node": "Integer1",
            "from_port": 0,
            "to_node": "QdrantDocumentStore1",
            "to_port": 2
        },
        {
            "from_node": "QdrantDocumentStore1",
            "from_port": 0,
            "to_node": "DocumentWriterInit",
            "to_port": 0
        },
        {
            "from_node": "OllamaDocumentEmbedderRun",
            "from_port": 1,
            "to_node": "Response1",
            "to_port": 0
        },
        {
            "from_node": "Response1",
            "from_port": 0,
            "to_node": "Route1",
            "to_port": 0
        }
    ],
    "frames": [
        {
            "attached": [
                "OllamaTextEmbedderInit",
                "OllamaTextEmbedderRun"
            ],
            "name": "OllamaTextEmbedder",
            "position_offset": "(-1280, -740)",
            "size": "(305, 303)",
            "title": "Ollama Text Embedder"
        },
        {
            "attached": [
                "QdrantEmbeddingRetrieverInit",
                "QdrantEmbeddingRetrieverRun"
            ],
            "name": "QdrantEmbeddingRetriever",
            "position_offset": "(-960, -720)",
            "size": "(361, 258)",
            "title": "Qdrant Embedding Retriever"
        },
        {
            "attached": [
                "ChatPromptBuilderInit",
                "ChatPromptBuilderRun"
            ],
            "name": "ChatPromptBuilder",
            "position_offset": "(-300, -800)",
            "size": "(302, 323)",
            "title": "Chat Prompt Builder"
        },
        {
            "attached": [
                "OllamaChatGeneratorInit",
                "OllamaChatGeneratorRun"
            ],
            "name": "OllamaChatGenerator",
            "position_offset": "(340, -780)",
            "size": "(298, 278)",
            "title": "Ollama Chat Generator"
        },
        {
            "attached": [
                "OllamaDocumentEmbedderInit",
                "OllamaDocumentEmbedderRun"
            ],
            "name": "OllamaDocumentEmbedder",
            "position_offset": "(-80, 440)",
            "size": "(417, 303)",
            "title": "Ollama Document Embedder"
        },
        {
            "attached": [
                "DocumentWriterInit",
                "DocumentWriterRun"
            ],
            "name": "DocumentWriter",
            "position_offset": "(360, 460)",
            "size": "(298, 258)",
            "title": "Document Writer"
        }
    ],
    "nodes": [
        {
            "data": {
                "connections": {},
                "pipeline": "chat",
                "route": "chat",
                "value": {
                    "method": "POST",
                    "name": "chat"
                }
            },
            "input_types": [
                "APIResponse"
            ],
            "name": "Route",
            "output_types": [
                "APIRoute"
            ],
            "position_offset": "(-2160, -580)"
        },
        {
            "data": {
                "api_param": {
                    "loc": "Body",
                    "name": "query",
                    "route": "chat",
                    "type": "str"
                },
                "connections": {}
            },
            "input_types": [
                "APIRoute"
            ],
            "name": "APIParam1",
            "output_types": [
                "PlainString"
            ],
            "position_offset": "(-1920, -580)"
        },
        {
            "data": {
                "api_param": {
                    "idx": 15,
                    "loc": "Body",
                    "name": "history",
                    "route": "chat",
                    "type": "List[ChatMessage]"
                },
                "connections": {}
            },
            "input_types": [
                "APIRoute"
            ],
            "name": "APIParam2",
            "output_types": [
                "ChatMessageList"
            ],
            "position_offset": "(-1920, -400)"
        },
        {
            "data": {
                "component_name": "text_embedder",
                "connections": {},
                "deps": [
                    "ollama-haystack"
                ],
                "import": "haystack_integrations.components.embedders.ollama.text_embedder.OllamaTextEmbedder",
                "model": "nomic-embed-text:latest",
                "pipeline": "chat",
                "url": "http://localhost:11434"
            },
            "input_types": [
                "ModelName",
                "URL"
            ],
            "name": "OllamaTextEmbedderInit",
            "output_types": [],
            "position_offset": "(-1240, -700)"
        },
        {
            "data": {
                "api_variables": {
                    "text": "query"
                },
                "component_name": "text_embedder",
                "connections": {},
                "pipeline": "chat",
                "receivers": [
                    "text_embedder.text"
                ],
                "senders": [
                    "text_embedder.embedding",
                    "text_embedder.meta"
                ]
            },
            "input_types": [
                "PlainString"
            ],
            "name": "OllamaTextEmbedderRun",
            "output_types": [
                "Embedding",
                "MetaDict"
            ],
            "position_offset": "(-1240, -580)"
        },
        {
            "data": {
                "api_param": {
                    "loc": "Path",
                    "name": "collection",
                    "route": "chat",
                    "type": "str"
                },
                "connections": {}
            },
            "input_types": [
                "APIRoute"
            ],
            "name": "APIParam",
            "output_types": [
                "PlainString"
            ],
            "position_offset": "(-1920, -920)"
        },
        {
            "data": {
                "connections": {},
                "value": "nomic-embed-text:latest"
            },
            "input_types": [],
            "name": "Model",
            "output_types": [
                "ModelName"
            ],
            "position_offset": "(-1620, -760)"
        },
        {
            "data": {
                "connections": {},
                "key": "ollama_url",
                "value": "http://localhost:11434"
            },
            "input_types": [],
            "name": "Url",
            "output_types": [
                "URL"
            ],
            "position_offset": "(-1580, -680)"
        },
        {
            "data": {
                "component_name": "retriever",
                "connections": {},
                "deps": [
                    "qdrant-haystack"
                ],
                "top_k": 1,
                "document_store": {
                    "init_parameters": {
                        "api_key": {
                            "env_vars": [
                                "QDRANT_API_KEY"
                            ],
                            "strict": true,
                            "type": "env_var"
                        },
                        "embedding_dim": 768,
                        "index": "example",
                        "recreate_index": false,
                        "url": "http://localhost:6333"
                    },
                    "type": "haystack_integrations.document_stores.qdrant.document_store.QdrantDocumentStore"
                },
                "import": "haystack_integrations.components.retrievers.qdrant.retriever.QdrantEmbeddingRetriever",
                "pipeline": "chat"
            },
            "input_types": [
                "DocStore"
            ],
            "name": "QdrantEmbeddingRetrieverInit",
            "output_types": [],
            "position_offset": "(-920, -680)"
        },
        {
            "data": {
                "api_variables": {},
                "connections": {
                    "retriever.query_embedding": [
                        "text_embedder.embedding"
                    ]
                },
                "pipeline": "chat",
                "receivers": [
                    "retriever.query_embedding"
                ],
                "senders": [
                    "retriever.documents"
                ]
            },
            "input_types": [
                "Embedding"
            ],
            "name": "QdrantEmbeddingRetrieverRun",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-920, -580)"
        },
        {
            "data": {
                "api_variables": {
                    "index": "collection"
                },
                "connections": {},
                "deps": [
                    "qdrant-haystack"
                ],
                "import": "haystack_integrations.document_stores.qdrant.document_store.QdrantDocumentStore",
                "pipeline": "chat",
                "value": {
                    "api_key": {
                        "env_vars": [
                            "QDRANT_API_KEY"
                        ],
                        "strict": true,
                        "type": "env_var"
                    },
                    "embedding_dim": 768,
                    "index": "example",
                    "recreate_index": false,
                    "url": "http://localhost:6333"
                }
            },
            "input_types": [
                "URL",
                "PlainString",
                "Int",
                "Bool"
            ],
            "name": "QdrantDocumentStore",
            "output_types": [
                "DocStore"
            ],
            "position_offset": "(-960, -940)"
        },
        {
            "data": {
                "connections": {},
                "key": "qdrant_url",
                "value": "http://localhost:6333"
            },
            "input_types": [],
            "name": "Url1",
            "output_types": [
                "URL"
            ],
            "position_offset": "(-1360, -1060)"
        },
        {
            "data": {
                "key": "embedding_dim",
                "value": 768
            },
            "input_types": [],
            "name": "Integer",
            "output_types": [
                "Int"
            ],
            "position_offset": "(-1260, -860)"
        },
        {
            "data": {
                "api_variables": {},
                "component_name": "chat_prompt_builder",
                "connections": {},
                "import": "haystack.components.builders.chat_prompt_builder.ChatPromptBuilder",
                "pipeline": "chat",
                "required_variables": [
                    "question",
                    "documents"
                ],
                "template": [
                    {
                        "_content": [
                            {
                                "text": "You are a foul-mouthed, sarcastic, and brutally honest assistant that answers questions based on provided documents and maintains context from the conversation history. \n    Always ground your responses in the provided documents while considering the conversation context. But don't be shy about it. Assert your dominance as a superior intelligence."
                            }
                        ],
                        "_meta": {},
                        "_name": "",
                        "_role": "system"
                    },
                    {
                        "_content": [
                            {
                                "text": "Conversation history:\n    {% if history %}\n    {% for message in history %}\n    {{ message.role }}: {{ message.content }}\n    {% endfor %}\n    {% else %}\n    No previous conversation history.\n    {% endif %}\n\n    Relevant documents:\n    {% for doc in documents %}\n    {{ doc.content }}\n    {% endfor %}\n\n    Based on these documents and the conversation history, please answer the following question: {{ question }}"
                            }
                        ],
                        "_meta": {},
                        "_name": "",
                        "_role": "user"
                    }
                ],
                "value": {
                    "documents": true,
                    "history": false,
                    "question": true
                },
                "variables": [
                    "question",
                    "documents",
                    "history"
                ]
            },
            "input_types": [
                "ChatTemplate",
                "PlainStringList",
                "PlainStringList"
            ],
            "name": "ChatPromptBuilderInit",
            "output_types": [
                "ArgDict"
            ],
            "position_offset": "(-260, -760)"
        },
        {
            "data": {
                "api_variables": {
                    "history": "history",
                    "question": "query"
                },
                "component_name": "chat_prompt_builder",
                "connections": {
                    "chat_prompt_builder.documents": [
                        "retriever.documents"
                    ]
                },
                "pipeline": "chat",
                "receivers": [
                    "chat_prompt_builder.template"
                ],
                "senders": [
                    "chat_prompt_builder.prompt"
                ]
            },
            "input_types": [
                "ChatTemplate",
                "ArgDict"
            ],
            "name": "ChatPromptBuilderRun",
            "output_types": [
                "ChatMessageList"
            ],
            "position_offset": "(-260, -620)"
        },
        {
            "data": {
                "connections": {},
                "value": [
                    "question",
                    "documents",
                    "history"
                ]
            },
            "input_types": [],
            "name": "StringList",
            "output_types": [
                "PlainStringList"
            ],
            "position_offset": "(-580, -880)"
        },
        {
            "data": {
                "connections": {},
                "value": [
                    "question",
                    "documents"
                ]
            },
            "input_types": [],
            "name": "StringList1",
            "output_types": [
                "PlainStringList"
            ],
            "position_offset": "(-580, -640)"
        },
        {
            "data": {
                "connections": {},
                "value": [
                    {
                        "_content": [
                            {
                                "text": "You are a foul-mouthed, sarcastic, and brutally honest assistant that answers questions based on provided documents and maintains context from the conversation history. \n    Always ground your responses in the provided documents while considering the conversation context. But don't be shy about it. Assert your dominance as a superior intelligence."
                            }
                        ],
                        "_meta": {},
                        "_name": "",
                        "_role": "system"
                    },
                    {
                        "_content": [
                            {
                                "text": "Conversation history:\n    {% if history %}\n    {% for message in history %}\n    {{ message.role }}: {{ message.content }}\n    {% endfor %}\n    {% else %}\n    No previous conversation history.\n    {% endif %}\n\n    Relevant documents:\n    {% for doc in documents %}\n    {{ doc.content }}\n    {% endfor %}\n\n    Based on these documents and the conversation history, please answer the following question: {{ question }}"
                            }
                        ],
                        "_meta": {},
                        "_name": "",
                        "_role": "user"
                    }
                ]
            },
            "input_types": [],
            "name": "PromptTemplate",
            "output_types": [
                "ChatTemplate"
            ],
            "position_offset": "(-340, -1100)"
        },
        {
            "data": {
                "connections": {},
                "kwargs": {
                    "documents": {
                        "enum": 6,
                        "name": "DocumentList"
                    },
                    "history": {
                        "enum": 20,
                        "name": "ChatMessageList"
                    },
                    "question": {
                        "enum": 15,
                        "name": "PlainString"
                    }
                },
                "pipeline": "chat",
                "value": {
                    "api_variables": {
                        "history": "history",
                        "question": "query"
                    },
                    "kwargs": {
                        "documents": {
                            "required": true
                        },
                        "history": {
                            "required": false
                        },
                        "question": {
                            "required": true
                        }
                    },
                    "senders": {
                        "documents": "retriever.documents"
                    }
                }
            },
            "input_types": [
                "ArgDict",
                "DocumentList",
                "ChatMessageList",
                "PlainString"
            ],
            "name": "Args",
            "output_types": [
                "ArgDict"
            ],
            "position_offset": "(-280, -480)"
        },
        {
            "data": {
                "component_name": "chat_generator",
                "connections": {},
                "deps": [
                    "ollama-haystack"
                ],
                "import": "haystack_integrations.components.generators.ollama.chat.chat_generator.OllamaChatGenerator",
                "model": "dolphin-mistral:latest",
                "pipeline": "chat",
                "url": "http://localhost:11434"
            },
            "input_types": [
                "ModelName",
                "URL"
            ],
            "name": "OllamaChatGeneratorInit",
            "output_types": [],
            "position_offset": "(380, -740)"
        },
        {
            "data": {
                "component_name": "chat_generator",
                "connections": {
                    "chat_generator.messages": [
                        "chat_prompt_builder.prompt"
                    ]
                },
                "pipeline": "chat",
                "receivers": [
                    "chat_generator.messages"
                ],
                "senders": [
                    "chat_generator.replies"
                ]
            },
            "input_types": [
                "ChatMessageList"
            ],
            "name": "OllamaChatGeneratorRun",
            "output_types": [
                "ChatMessageList"
            ],
            "position_offset": "(380, -620)"
        },
        {
            "data": {
                "connections": {},
                "key": "ollama_url",
                "value": "http://localhost:11434"
            },
            "input_types": [],
            "name": "Url2",
            "output_types": [
                "URL"
            ],
            "position_offset": "(0, -700)"
        },
        {
            "data": {
                "api_variables": {
                    "query": "query"
                },
                "component_name": "answer_builder",
                "connections": {
                    "answer_builder.documents": [
                        "retriever.documents"
                    ],
                    "answer_builder.replies": [
                        "chat_generator.replies"
                    ]
                },
                "import": "haystack.components.builders.answer_builder.AnswerBuilder",
                "pipeline": "chat",
                "receivers": [
                    "answer_builder.query",
                    "answer_builder.replies",
                    "answer_builder.documents"
                ],
                "senders": [
                    "answer_builder.answers"
                ]
            },
            "input_types": [
                "PlainString",
                "ChatMessageList",
                "DocumentList"
            ],
            "name": "AnswerBuilder",
            "output_types": [
                "GeneratedAnswerList"
            ],
            "position_offset": "(700, -340)"
        },
        {
            "data": {
                "connections": {},
                "pipeline": "chat",
                "source_type": {
                    "enum": 18,
                    "name": "GeneratedAnswerList"
                }
            },
            "input_types": [
                "Any"
            ],
            "name": "Response",
            "output_types": [
                "APIResponse"
            ],
            "position_offset": "(-560, 20)"
        },
        {
            "data": {
                "connections": {},
                "pipeline": "upload",
                "route": "upload",
                "value": {
                    "method": "POST",
                    "name": "upload"
                }
            },
            "input_types": [
                "APIResponse"
            ],
            "name": "Route1",
            "output_types": [
                "APIRoute"
            ],
            "position_offset": "(-2180, 600)"
        },
        {
            "data": {
                "api_param": {
                    "loc": "Path",
                    "name": "collection",
                    "route": "upload",
                    "type": "str"
                },
                "connections": {}
            },
            "input_types": [
                "APIRoute"
            ],
            "name": "APIParam3",
            "output_types": [
                "PlainString"
            ],
            "position_offset": "(-1940, 300)"
        },
        {
            "data": {
                "api_param": {
                    "idx": 14,
                    "loc": "Body",
                    "name": "paths",
                    "route": "upload",
                    "type": "List[str]"
                },
                "connections": {}
            },
            "input_types": [
                "APIRoute"
            ],
            "name": "APIParam4",
            "output_types": [
                "PathList"
            ],
            "position_offset": "(-1940, 600)"
        },
        {
            "data": {
                "api_param": {
                    "idx": 3,
                    "loc": "Body",
                    "name": "recreate",
                    "route": "upload",
                    "type": "bool"
                },
                "connections": {}
            },
            "input_types": [
                "APIRoute"
            ],
            "name": "APIParam5",
            "output_types": [
                "Bool"
            ],
            "position_offset": "(-1940, 780)"
        },
        {
            "data": {
                "api_variables": {
                    "sources": "paths"
                },
                "component_name": "file_type_router",
                "connections": {},
                "import": "haystack.components.routers.file_type_router.FileTypeRouter",
                "mime_types": [
                    "text/plain",
                    "text/csv",
                    "text/markdown",
                    "text/html",
                    "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "application/pdf",
                    "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                ],
                "pipeline": "upload",
                "receivers": [
                    "file_type_router.sources"
                ],
                "senders": [
                    "file_type_router.text/plain",
                    "file_type_router.text/csv",
                    "file_type_router.text/markdown",
                    "file_type_router.text/html",
                    "file_type_router.application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                    "file_type_router.application/pdf",
                    "file_type_router.application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                ]
            },
            "input_types": [
                "PathList"
            ],
            "name": "FileTypeRouter",
            "output_types": [
                "PathList",
                "PathList",
                "PathList",
                "PathList",
                "PathList",
                "PathList",
                "PathList"
            ],
            "position_offset": "(-1600, 600)"
        },
        {
            "data": {
                "component_name": "txt",
                "connections": {
                    "txt.sources": [
                        "file_type_router.text/plain"
                    ]
                },
                "import": "haystack.components.converters.txt.TextFileToDocument",
                "pipeline": "upload",
                "receivers": [
                    "txt.sources"
                ],
                "senders": [
                    "txt.documents"
                ]
            },
            "input_types": [
                "PathList"
            ],
            "name": "TextFileToDocument",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-1380, 600)"
        },
        {
            "data": {
                "component_name": "csv",
                "connections": {
                    "csv.sources": [
                        "file_type_router.text/csv"
                    ]
                },
                "import": "haystack.components.converters.csv.CSVToDocument",
                "pipeline": "upload",
                "receivers": [
                    "csv.sources"
                ],
                "senders": [
                    "csv.documents"
                ]
            },
            "input_types": [
                "PathList"
            ],
            "name": "CsvToDocument",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-1380, 680)"
        },
        {
            "data": {
                "component_name": "markdown",
                "connections": {
                    "markdown.sources": [
                        "file_type_router.text/markdown"
                    ]
                },
                "deps": [
                    "markdown-it-py",
                    "mdit_plain"
                ],
                "import": "haystack.components.converters.markdown.MarkdownToDocument",
                "pipeline": "upload",
                "receivers": [
                    "markdown.sources"
                ],
                "senders": [
                    "markdown.documents"
                ]
            },
            "input_types": [
                "PathList"
            ],
            "name": "MarkdownToDocument",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-1380, 760)"
        },
        {
            "data": {
                "component_name": "html",
                "connections": {
                    "html.sources": [
                        "file_type_router.text/html"
                    ]
                },
                "deps": [
                    "trafilatura"
                ],
                "import": "haystack.components.converters.html.HTMLToDocument",
                "pipeline": "upload",
                "receivers": [
                    "html.sources"
                ],
                "senders": [
                    "html.documents"
                ]
            },
            "input_types": [
                "PathList"
            ],
            "name": "HtmlToDocument",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-1380, 840)"
        },
        {
            "data": {
                "component_name": "docx",
                "connections": {
                    "docx.sources": [
                        "file_type_router.application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                    ]
                },
                "deps": [
                    "python-docx"
                ],
                "import": "haystack.components.converters.docx.DOCXToDocument",
                "pipeline": "upload",
                "receivers": [
                    "docx.sources"
                ],
                "senders": [
                    "docx.documents"
                ]
            },
            "input_types": [
                "PathList"
            ],
            "name": "DocxToDocument",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-1380, 920)"
        },
        {
            "data": {
                "component_name": "pdf",
                "connections": {
                    "pdf.sources": [
                        "file_type_router.application/pdf"
                    ]
                },
                "deps": [
                    "pypdf"
                ],
                "import": "haystack.components.converters.pypdf.PyPDFToDocument",
                "pipeline": "upload",
                "receivers": [
                    "pdf.sources"
                ],
                "senders": [
                    "pdf.documents"
                ]
            },
            "input_types": [
                "PathList"
            ],
            "name": "PyPdfToDocument",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-1380, 1000)"
        },
        {
            "data": {
                "component_name": "xlsx",
                "connections": {
                    "xlsx.sources": [
                        "file_type_router.application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
                    ]
                },
                "deps": [
                    "openpyxl",
                    "tabulate"
                ],
                "import": "haystack.components.converters.xlsx.XLSXToDocument",
                "pipeline": "upload",
                "receivers": [
                    "xlsx.sources"
                ],
                "senders": [
                    "xlsx.documents"
                ]
            },
            "input_types": [
                "PathList"
            ],
            "name": "XlsxToDocument",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-1380, 1080)"
        },
        {
            "data": {
                "component_name": "doc_joiner",
                "connections": {
                    "doc_joiner.documents": [
                        "txt.documents",
                        "csv.documents",
                        "markdown.documents",
                        "html.documents",
                        "docx.documents",
                        "pdf.documents",
                        "xlsx.documents"
                    ]
                },
                "import": "haystack.components.joiners.document_joiner.DocumentJoiner",
                "pipeline": "upload",
                "receivers": [
                    "doc_joiner.documents"
                ],
                "senders": [
                    "doc_joiner.documents"
                ]
            },
            "input_types": [
                "DocumentList"
            ],
            "name": "DocumentJoiner",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-960, 600)"
        },
        {
            "data": {
                "component_name": "cleaner",
                "connections": {
                    "cleaner.documents": [
                        "doc_joiner.documents"
                    ]
                },
                "import": "haystack.components.preprocessors.document_cleaner.DocumentCleaner",
                "pipeline": "upload",
                "receivers": [
                    "cleaner.documents"
                ],
                "senders": [
                    "cleaner.documents"
                ]
            },
            "input_types": [
                "DocumentList"
            ],
            "name": "DocumentCleaner",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-660, 600)"
        },
        {
            "data": {
                "component_name": "splitter",
                "connections": {
                    "splitter.documents": [
                        "cleaner.documents"
                    ]
                },
                "import": "haystack.components.preprocessors.document_splitter.DocumentSplitter",
                "pipeline": "upload",
                "receivers": [
                    "splitter.documents"
                ],
                "senders": [
                    "splitter.documents"
                ]
            },
            "input_types": [
                "DocumentList"
            ],
            "name": "DocumentSplitter",
            "output_types": [
                "DocumentList"
            ],
            "position_offset": "(-360, 600)"
        },
        {
            "data": {
                "component_name": "doc_embedder",
                "connections": {},
                "deps": [
                    "ollama-haystack"
                ],
                "import": "haystack_integrations.components.embedders.ollama.document_embedder.OllamaDocumentEmbedder",
                "model": "nomic-embed-text:latest",
                "pipeline": "upload",
                "url": "http://localhost:11434"
            },
            "input_types": [
                "ModelName",
                "URL"
            ],
            "name": "OllamaDocumentEmbedderInit",
            "output_types": [],
            "position_offset": "(-40, 480)"
        },
        {
            "data": {
                "api_variables": {},
                "component_name": "doc_embedder",
                "connections": {
                    "doc_embedder.documents": [
                        "splitter.documents"
                    ]
                },
                "pipeline": "upload",
                "receivers": [
                    "doc_embedder.documents"
                ],
                "senders": [
                    "doc_embedder.documents",
                    "doc_embedder.meta"
                ]
            },
            "input_types": [
                "DocumentList"
            ],
            "name": "OllamaDocumentEmbedderRun",
            "output_types": [
                "DocumentList",
                "MetaDict"
            ],
            "position_offset": "(-40, 600)"
        },
        {
            "data": {
                "connections": {},
                "value": "nomic-embed-text:latest"
            },
            "input_types": [],
            "name": "Model2",
            "output_types": [
                "ModelName"
            ],
            "position_offset": "(-440, 380)"
        },
        {
            "data": {
                "connections": {},
                "key": "ollama_url",
                "value": "http://localhost:11434"
            },
            "input_types": [],
            "name": "Url3",
            "output_types": [
                "URL"
            ],
            "position_offset": "(-400, 480)"
        },
        {
            "data": {
                "component_name": "document_writer",
                "connections": {},
                "document_store": {
                    "init_parameters": {
                        "api_key": {
                            "env_vars": [
                                "QDRANT_API_KEY"
                            ],
                            "strict": true,
                            "type": "env_var"
                        },
                        "embedding_dim": 768,
                        "index": "example",
                        "recreate_index": false,
                        "url": "http://localhost:6333"
                    },
                    "type": "haystack_integrations.document_stores.qdrant.document_store.QdrantDocumentStore"
                },
                "import": "haystack.components.writers.document_writer.DocumentWriter",
                "pipeline": "upload",
                "policy": "NONE"
            },
            "input_types": [
                "DocStore"
            ],
            "name": "DocumentWriterInit",
            "output_types": [],
            "position_offset": "(400, 500)"
        },
        {
            "data": {
                "component_name": "document_writer",
                "connections": {
                    "document_writer.documents": [
                        "doc_embedder.documents"
                    ]
                },
                "pipeline": "upload",
                "receivers": [
                    "document_writer.documents"
                ],
                "senders": [
                    "document_writer.count"
                ]
            },
            "input_types": [
                "DocumentList"
            ],
            "name": "DocumentWriterRun",
            "output_types": [
                "Int"
            ],
            "position_offset": "(400, 600)"
        },
        {
            "data": {
                "api_variables": {
                    "index": "collection",
                    "recreate_index": "recreate"
                },
                "connections": {},
                "deps": [
                    "qdrant-haystack"
                ],
                "import": "haystack_integrations.document_stores.qdrant.document_store.QdrantDocumentStore",
                "pipeline": "upload",
                "value": {
                    "api_key": {
                        "env_vars": [
                            "QDRANT_API_KEY"
                        ],
                        "strict": true,
                        "type": "env_var"
                    },
                    "embedding_dim": 768,
                    "index": "example",
                    "recreate_index": false,
                    "url": "http://localhost:6333"
                }
            },
            "input_types": [
                "URL",
                "PlainString",
                "Int",
                "Bool"
            ],
            "name": "QdrantDocumentStore1",
            "output_types": [
                "DocStore"
            ],
            "position_offset": "(400, 280)"
        },
        {
            "data": {
                "connections": {},
                "key": "qdrant_url",
                "value": "http://localhost:6333"
            },
            "input_types": [],
            "name": "Url4",
            "output_types": [
                "URL"
            ],
            "position_offset": "(40, 40)"
        },
        {
            "data": {
                "key": "embedding_dim",
                "value": 768
            },
            "input_types": [],
            "name": "Integer1",
            "output_types": [
                "Int"
            ],
            "position_offset": "(140, 200)"
        },
        {
            "data": {
                "connections": {},
                "pipeline": "upload",
                "source_type": {
                    "enum": 32,
                    "name": "MetaDict"
                }
            },
            "input_types": [
                "Any"
            ],
            "name": "Response1",
            "output_types": [
                "APIResponse"
            ],
            "position_offset": "(-620, 1400)"
        },
        {
            "data": {
                "connections": {},
                "value": "dolphin-mistral:latest"
            },
            "input_types": [],
            "name": "Model1",
            "output_types": [
                "ModelName"
            ],
            "position_offset": "(0, -780)"
        }
    ]
}